// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TailorAPI.Migrations
{
    [DbContext(typeof(TailorDbContext))]
    [Migration("20250516120723_AddProductTypeAsString")]
    partial class AddProductTypeAsString
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("TailorAPI.Models.FabricStock", b =>
                {
                    b.Property<int>("StockID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockID"));

                    b.Property<int>("FabricTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StockAddDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("StockIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StockUse")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("StockID");

                    b.HasIndex("FabricTypeID");

                    b.ToTable("FabricStocks");
                });

            modelBuilder.Entity("TailorAPI.Models.FabricType", b =>
                {
                    b.Property<int>("FabricTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FabricTypeID"));

                    b.Property<decimal>("AvailableStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FabricName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("PricePerMeter")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FabricTypeID");

                    b.ToTable("FabricTypes");
                });

            modelBuilder.Entity("TailorAPI.Models.Measurement", b =>
                {
                    b.Property<int>("MeasurementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeasurementID"));

                    b.Property<float>("Ankle")
                        .HasColumnType("real");

                    b.Property<float>("Arms")
                        .HasColumnType("real");

                    b.Property<float>("Bicep")
                        .HasColumnType("real");

                    b.Property<float>("Calf")
                        .HasColumnType("real");

                    b.Property<float>("Chest")
                        .HasColumnType("real");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<float>("Forearm")
                        .HasColumnType("real");

                    b.Property<float>("Hip")
                        .HasColumnType("real");

                    b.Property<float>("Inseam")
                        .HasColumnType("real");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("LowerBodyMeasurement")
                        .HasColumnType("real");

                    b.Property<float>("Neck")
                        .HasColumnType("real");

                    b.Property<float>("Shoulder")
                        .HasColumnType("real");

                    b.Property<float>("Sleeve")
                        .HasColumnType("real");

                    b.Property<float>("SleeveLength")
                        .HasColumnType("real");

                    b.Property<float>("Thigh")
                        .HasColumnType("real");

                    b.Property<float>("TrouserLength")
                        .HasColumnType("real");

                    b.Property<float>("UpperBodyMeasurement")
                        .HasColumnType("real");

                    b.Property<float>("Waist")
                        .HasColumnType("real");

                    b.Property<float>("Wrist")
                        .HasColumnType("real");

                    b.HasKey("MeasurementID");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("TailorAPI.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("AssignedTo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("date");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("FabricLength")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FabricTypeID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("date");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderID");

                    b.HasIndex("AssignedTo");

                    b.HasIndex("CustomerId");

                    b.HasIndex("FabricTypeID");

                    b.HasIndex("ProductID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TailorAPI.Models.OtpVerification", b =>
                {
                    b.Property<int>("OtpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OtpId"));

                    b.Property<string>("Otp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OtpExpiry")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("OtpId");

                    b.HasIndex("UserID");

                    b.ToTable("OtpVerifications");
                });

            modelBuilder.Entity("TailorAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MakingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ProductID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TailorAPI.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleType")
                        .HasColumnType("int");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            RoleName = "Admin",
                            RoleType = 0
                        },
                        new
                        {
                            RoleID = 2,
                            RoleName = "Tailor",
                            RoleType = 0
                        },
                        new
                        {
                            RoleID = 3,
                            RoleName = "Manager",
                            RoleType = 0
                        });
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("Available");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TailorAPI.Models.FabricStock", b =>
                {
                    b.HasOne("TailorAPI.Models.FabricType", "FabricType")
                        .WithMany()
                        .HasForeignKey("FabricTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FabricType");
                });

            modelBuilder.Entity("TailorAPI.Models.Measurement", b =>
                {
                    b.HasOne("Customer", "Customer")
                        .WithOne("Measurement")
                        .HasForeignKey("TailorAPI.Models.Measurement", "CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("TailorAPI.Models.Order", b =>
                {
                    b.HasOne("User", "Assigned")
                        .WithMany()
                        .HasForeignKey("AssignedTo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TailorAPI.Models.FabricType", "fabricType")
                        .WithMany("Orders")
                        .HasForeignKey("FabricTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TailorAPI.Models.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assigned");

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("fabricType");
                });

            modelBuilder.Entity("TailorAPI.Models.OtpVerification", b =>
                {
                    b.HasOne("User", "user")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.HasOne("TailorAPI.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Customer", b =>
                {
                    b.Navigation("Measurement")
                        .IsRequired();
                });

            modelBuilder.Entity("TailorAPI.Models.FabricType", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TailorAPI.Models.Product", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TailorAPI.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
